{"ast":null,"code":"import { ContactActionTypes } from '../../types/contact';\nimport axios from 'axios';\nconst url = process.env.REACT_APP_API_UPL;\nexport const fetchContacts = (userId, token) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ContactActionTypes.FETCH_CONTACTS\n      });\n      const response = await axios.get(`${url}/600/users/${userId}/contacts`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ContactActionTypes.FETCH_CONTACTS_SUCCESS,\n          payload: response.data\n        });\n      }, 1000);\n    } catch (e) {\n      var _response;\n\n      dispatch({\n        type: ContactActionTypes.FETCH_CONTACTS_ERROR,\n        payload: (_response = e.response) === null || _response === void 0 ? void 0 : _response.data\n      });\n    }\n  };\n};\nexport const addContact = (surname, name, userId, token) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ContactActionTypes.ADD_CONTACT\n      });\n      const response = await axios.post(`${url}/600/users/${userId}/contacts`, JSON.stringify({\n        surname,\n        name,\n        userId\n      }), {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ContactActionTypes.ADD_CONTACT_SUCCESS,\n          payload: response.data\n        });\n      }, 500);\n    } catch (e) {\n      var _response2;\n\n      dispatch({\n        type: ContactActionTypes.ADD_CONTACT_ERROR,\n        payload: (_response2 = e.response) === null || _response2 === void 0 ? void 0 : _response2.data\n      });\n    }\n  };\n};\nexport const editContact = (id, surname, name, userId, token) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ContactActionTypes.EDIT_CONTACT\n      });\n      const response = await axios.put(`${url}/600/contacts/${id}`, JSON.stringify({\n        surname,\n        name,\n        userId\n      }), {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ContactActionTypes.EDIT_CONTACT_SUCCESS,\n          payload: response.data\n        });\n      }, 500);\n    } catch (e) {\n      var _response3;\n\n      dispatch({\n        type: ContactActionTypes.EDIT_CONTACT_ERROR,\n        payload: (_response3 = e.response) === null || _response3 === void 0 ? void 0 : _response3.data\n      });\n    }\n  };\n};\nexport const deleteContact = (id, token) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ContactActionTypes.DELETE_CONTACT\n      });\n      await axios.delete(`${url}/600/contacts/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTimeout(() => {\n        dispatch({\n          type: ContactActionTypes.DELETE_CONTACT_SUCCESS,\n          payload: id\n        });\n      }, 500);\n    } catch (e) {\n      var _response4;\n\n      dispatch({\n        type: ContactActionTypes.DELETE_CONTACT_ERROR,\n        payload: (_response4 = e.response) === null || _response4 === void 0 ? void 0 : _response4.data\n      });\n    }\n  };\n};\nexport const searchContact = searchValue => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ContactActionTypes.SEARCH_CONTACT\n      });\n      dispatch({\n        type: ContactActionTypes.SEARCH_CONTACT_SUCCESS,\n        payload: searchValue\n      });\n    } catch (e) {\n      var _response5;\n\n      dispatch({\n        type: ContactActionTypes.SEARCH_CONTACT_ERROR,\n        payload: (_response5 = e.response) === null || _response5 === void 0 ? void 0 : _response5.data\n      });\n    }\n  };\n};\nexport const clearContacts = () => {\n  return async dispatch => {\n    dispatch({\n      type: ContactActionTypes.CLEAR_CONTACTS\n    });\n  };\n};","map":{"version":3,"names":["ContactActionTypes","axios","url","process","env","REACT_APP_API_UPL","fetchContacts","userId","token","dispatch","type","FETCH_CONTACTS","response","get","headers","Authorization","setTimeout","FETCH_CONTACTS_SUCCESS","payload","data","e","FETCH_CONTACTS_ERROR","addContact","surname","name","ADD_CONTACT","post","JSON","stringify","ADD_CONTACT_SUCCESS","ADD_CONTACT_ERROR","editContact","id","EDIT_CONTACT","put","EDIT_CONTACT_SUCCESS","EDIT_CONTACT_ERROR","deleteContact","DELETE_CONTACT","delete","DELETE_CONTACT_SUCCESS","DELETE_CONTACT_ERROR","searchContact","searchValue","SEARCH_CONTACT","SEARCH_CONTACT_SUCCESS","SEARCH_CONTACT_ERROR","clearContacts","CLEAR_CONTACTS"],"sources":["C:/Users/Евгения Шавкун/Desktop/test-app/src/store/actionCreators/contact.ts"],"sourcesContent":["import { Contact, ContactAction, ContactActionTypes } from '../../types/contact'\r\nimport { Dispatch } from '@reduxjs/toolkit'\r\nimport axios, { AxiosError } from 'axios'\r\nconst url = process.env.REACT_APP_API_UPL\r\n\r\nexport const fetchContacts = (userId: number | null, token: string | null) => {\r\n  return async (dispatch: Dispatch<ContactAction>) => {\r\n    try {\r\n      dispatch({ type: ContactActionTypes.FETCH_CONTACTS })\r\n      const response = await axios.get(`${url}/600/users/${userId}/contacts`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: ContactActionTypes.FETCH_CONTACTS_SUCCESS,\r\n          payload: response.data as Contact[],\r\n        })\r\n      }, 1000)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ContactActionTypes.FETCH_CONTACTS_ERROR,\r\n        payload: (e as AxiosError).response?.data as string,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const addContact = (surname: string, name: string, userId: number, token: string | null) => {\r\n  return async (dispatch: Dispatch<ContactAction>) => {\r\n    try {\r\n      dispatch({ type: ContactActionTypes.ADD_CONTACT })\r\n      const response = await axios.post(\r\n        `${url}/600/users/${userId}/contacts`,\r\n        JSON.stringify({ surname, name, userId }),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        },\r\n      )\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: ContactActionTypes.ADD_CONTACT_SUCCESS,\r\n          payload: response.data as Contact,\r\n        })\r\n      }, 500)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ContactActionTypes.ADD_CONTACT_ERROR,\r\n        payload: (e as AxiosError).response?.data as string,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const editContact = (\r\n  id: number,\r\n  surname: string,\r\n  name: string,\r\n  userId: number,\r\n  token: string | null,\r\n) => {\r\n  return async (dispatch: Dispatch<ContactAction>) => {\r\n    try {\r\n      dispatch({ type: ContactActionTypes.EDIT_CONTACT })\r\n      const response = await axios.put(\r\n        `${url}/600/contacts/${id}`,\r\n        JSON.stringify({ surname, name, userId }),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        },\r\n      )\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: ContactActionTypes.EDIT_CONTACT_SUCCESS,\r\n          payload: response.data,\r\n        })\r\n      }, 500)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ContactActionTypes.EDIT_CONTACT_ERROR,\r\n        payload: (e as AxiosError).response?.data as string,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteContact = (id: number, token: string | null) => {\r\n  return async (dispatch: Dispatch<ContactAction>) => {\r\n    try {\r\n      dispatch({ type: ContactActionTypes.DELETE_CONTACT })\r\n      await axios.delete(`${url}/600/contacts/${id}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: ContactActionTypes.DELETE_CONTACT_SUCCESS,\r\n          payload: id,\r\n        })\r\n      }, 500)\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ContactActionTypes.DELETE_CONTACT_ERROR,\r\n        payload: (e as AxiosError).response?.data as string,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const searchContact = (searchValue: string) => {\r\n  return async (dispatch: Dispatch<ContactAction>) => {\r\n    try {\r\n      dispatch({ type: ContactActionTypes.SEARCH_CONTACT })\r\n      dispatch({\r\n        type: ContactActionTypes.SEARCH_CONTACT_SUCCESS,\r\n        payload: searchValue,\r\n      })\r\n    } catch (e) {\r\n      dispatch({\r\n        type: ContactActionTypes.SEARCH_CONTACT_ERROR,\r\n        payload: (e as AxiosError).response?.data as string,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const clearContacts = () => {\r\n  return async (dispatch: Dispatch<ContactAction>) => {\r\n    dispatch({ type: ContactActionTypes.CLEAR_CONTACTS })\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}