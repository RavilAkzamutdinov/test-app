{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { authReducer } from './reducers/authReducer';\nimport { contactReducer } from './reducers/contactReducer';\n\nconst rootReducer = () => ({\n  auth: authReducer,\n  contact: contactReducer // router: connectRouter(history)\n\n});\n\nexport const store = configureStore({\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\n  reducer: rootReducer()\n});","map":{"version":3,"names":["configureStore","authReducer","contactReducer","rootReducer","auth","contact","store","reducer"],"sources":["C:/Users/Евгения Шавкун/Desktop/test-app/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport { authReducer } from './reducers/authReducer'\r\nimport { contactReducer } from './reducers/contactReducer'\r\n\r\nconst rootReducer = () => ({\r\n  auth: authReducer,\r\n  contact: contactReducer,\r\n  // router: connectRouter(history)\r\n})\r\n\r\nexport const store = configureStore({\r\n  // middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\r\n  reducer: rootReducer(),\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AAEA,MAAMC,WAAW,GAAG,OAAO;EACzBC,IAAI,EAAEH,WADmB;EAEzBI,OAAO,EAAEH,cAFgB,CAGzB;;AAHyB,CAAP,CAApB;;AAMA,OAAO,MAAMI,KAAK,GAAGN,cAAc,CAAC;EAClC;EACAO,OAAO,EAAEJ,WAAW;AAFc,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}