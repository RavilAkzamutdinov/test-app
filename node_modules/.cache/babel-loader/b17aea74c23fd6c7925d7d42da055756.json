{"ast":null,"code":"import { ContactActionTypes } from '../../types/contact';\nconst initialState = {\n  contacts: [],\n  filteredContacts: [],\n  contactsLoading: false,\n  contactsError: null\n};\nexport const contactReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ContactActionTypes.FETCH_CONTACTS:\n      {\n        return { ...state,\n          contactsLoading: true,\n          contactsError: null\n        };\n      }\n\n    case ContactActionTypes.FETCH_CONTACTS_SUCCESS:\n      {\n        return { ...state,\n          contactsLoading: false,\n          contacts: action.payload,\n          filteredContacts: action.payload\n        };\n      }\n\n    case ContactActionTypes.FETCH_CONTACTS_ERROR:\n      {\n        return { ...state,\n          contactsLoading: false,\n          contactsError: action.payload\n        };\n      }\n\n    case ContactActionTypes.ADD_CONTACT:\n      {\n        return { ...state,\n          contactsLoading: true,\n          contactsError: null\n        };\n      }\n\n    case ContactActionTypes.ADD_CONTACT_SUCCESS:\n      {\n        return { ...state,\n          contactsLoading: false,\n          contacts: [...state.contacts, action.payload]\n        };\n      }\n\n    case ContactActionTypes.ADD_CONTACT_ERROR:\n      {\n        return { ...state,\n          contactsLoading: false,\n          contactsError: action.payload\n        };\n      }\n\n    case ContactActionTypes.EDIT_CONTACT:\n      {\n        return { ...state,\n          contactsLoading: true,\n          contactsError: null\n        };\n      }\n\n    case ContactActionTypes.EDIT_CONTACT_SUCCESS:\n      {\n        return { ...state,\n          contactsLoading: false,\n          contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n        };\n      }\n\n    case ContactActionTypes.EDIT_CONTACT_ERROR:\n      {\n        return { ...state,\n          contactsLoading: false,\n          contactsError: action.payload\n        };\n      }\n\n    case ContactActionTypes.DELETE_CONTACT:\n      {\n        return { ...state,\n          contactsLoading: true,\n          contactsError: null\n        };\n      }\n\n    case ContactActionTypes.DELETE_CONTACT_SUCCESS:\n      {\n        return { ...state,\n          contactsLoading: false,\n          contacts: state.contacts.filter(contact => contact.id !== action.payload)\n        };\n      }\n\n    case ContactActionTypes.DELETE_CONTACT_ERROR:\n      {\n        return { ...state,\n          contactsLoading: false,\n          contactsError: action.payload\n        };\n      }\n\n    case ContactActionTypes.SEARCH_CONTACT:\n      {\n        return { ...state,\n          contactsLoading: true,\n          contactsError: null\n        };\n      }\n\n    case ContactActionTypes.SEARCH_CONTACT_SUCCESS:\n      {\n        if (action.payload === '') {\n          return { ...state,\n            contactsLoading: false,\n            filteredContacts: state.contacts\n          };\n        }\n\n        return { ...state,\n          contactsLoading: false,\n          filteredContacts: state.contacts.filter(contact => contact.surname.toLowerCase().includes(action.payload.trim().toLowerCase()) || contact.name.toLowerCase().includes(action.payload.trim().toLowerCase()) || `${contact.surname.toLowerCase()} ${contact.name.toLowerCase()}`.includes(action.payload.trim().toLowerCase()) || `${contact.name.toLowerCase()} ${contact.surname.toLowerCase()}`.includes(action.payload.trim().toLowerCase()))\n        };\n      }\n\n    case ContactActionTypes.SEARCH_CONTACT_ERROR:\n      {\n        return { ...state,\n          contactsLoading: false,\n          contactsError: action.payload\n        };\n      }\n\n    case ContactActionTypes.CLEAR_CONTACTS:\n      {\n        return initialState;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"names":["ContactActionTypes","initialState","contacts","filteredContacts","contactsLoading","contactsError","contactReducer","state","action","type","FETCH_CONTACTS","FETCH_CONTACTS_SUCCESS","payload","FETCH_CONTACTS_ERROR","ADD_CONTACT","ADD_CONTACT_SUCCESS","ADD_CONTACT_ERROR","EDIT_CONTACT","EDIT_CONTACT_SUCCESS","map","contact","id","EDIT_CONTACT_ERROR","DELETE_CONTACT","DELETE_CONTACT_SUCCESS","filter","DELETE_CONTACT_ERROR","SEARCH_CONTACT","SEARCH_CONTACT_SUCCESS","surname","toLowerCase","includes","trim","name","SEARCH_CONTACT_ERROR","CLEAR_CONTACTS"],"sources":["C:/Users/Евгения Шавкун/Desktop/test-app/src/store/reducers/contactReducer.ts"],"sourcesContent":["import { ContactAction, ContactActionTypes, ContactState } from '../../types/contact'\r\n\r\nconst initialState: ContactState = {\r\n  contacts: [],\r\n  filteredContacts: [],\r\n  contactsLoading: false,\r\n  contactsError: null,\r\n}\r\n\r\nexport const contactReducer = (state = initialState, action: ContactAction): ContactState => {\r\n  switch (action.type) {\r\n    case ContactActionTypes.FETCH_CONTACTS: {\r\n      return { ...state, contactsLoading: true, contactsError: null }\r\n    }\r\n    case ContactActionTypes.FETCH_CONTACTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        contactsLoading: false,\r\n        contacts: action.payload,\r\n        filteredContacts: action.payload,\r\n      }\r\n    }\r\n    case ContactActionTypes.FETCH_CONTACTS_ERROR: {\r\n      return { ...state, contactsLoading: false, contactsError: action.payload }\r\n    }\r\n    case ContactActionTypes.ADD_CONTACT: {\r\n      return { ...state, contactsLoading: true, contactsError: null }\r\n    }\r\n    case ContactActionTypes.ADD_CONTACT_SUCCESS: {\r\n      return { ...state, contactsLoading: false, contacts: [...state.contacts, action.payload] }\r\n    }\r\n    case ContactActionTypes.ADD_CONTACT_ERROR: {\r\n      return { ...state, contactsLoading: false, contactsError: action.payload }\r\n    }\r\n    case ContactActionTypes.EDIT_CONTACT: {\r\n      return { ...state, contactsLoading: true, contactsError: null }\r\n    }\r\n    case ContactActionTypes.EDIT_CONTACT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        contactsLoading: false,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact,\r\n        ),\r\n      }\r\n    }\r\n    case ContactActionTypes.EDIT_CONTACT_ERROR: {\r\n      return { ...state, contactsLoading: false, contactsError: action.payload }\r\n    }\r\n    case ContactActionTypes.DELETE_CONTACT: {\r\n      return { ...state, contactsLoading: true, contactsError: null }\r\n    }\r\n    case ContactActionTypes.DELETE_CONTACT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        contactsLoading: false,\r\n        contacts: state.contacts.filter((contact) => contact.id !== action.payload),\r\n      }\r\n    }\r\n    case ContactActionTypes.DELETE_CONTACT_ERROR: {\r\n      return { ...state, contactsLoading: false, contactsError: action.payload }\r\n    }\r\n    case ContactActionTypes.SEARCH_CONTACT: {\r\n      return { ...state, contactsLoading: true, contactsError: null }\r\n    }\r\n    case ContactActionTypes.SEARCH_CONTACT_SUCCESS: {\r\n      if (action.payload === '') {\r\n        return { ...state, contactsLoading: false, filteredContacts: state.contacts }\r\n      }\r\n      return {\r\n        ...state,\r\n        contactsLoading: false,\r\n        filteredContacts: state.contacts.filter(\r\n          (contact) =>\r\n            contact.surname.toLowerCase().includes(action.payload.trim().toLowerCase()) ||\r\n            contact.name.toLowerCase().includes(action.payload.trim().toLowerCase()) ||\r\n            `${contact.surname.toLowerCase()} ${contact.name.toLowerCase()}`.includes(\r\n              action.payload.trim().toLowerCase(),\r\n            ) ||\r\n            `${contact.name.toLowerCase()} ${contact.surname.toLowerCase()}`.includes(\r\n              action.payload.trim().toLowerCase(),\r\n            ),\r\n        ),\r\n      }\r\n    }\r\n    case ContactActionTypes.SEARCH_CONTACT_ERROR: {\r\n      return { ...state, contactsLoading: false, contactsError: action.payload }\r\n    }\r\n    case ContactActionTypes.CLEAR_CONTACTS: {\r\n      return initialState\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}